{"version":3,"sources":["Components/DragnDropGroup/DragItem/dragnDropUtils.ts","Components/DragnDropGroup/DragItem/index.tsx","Components/DragnDropGroup/DragnDropContainer/index.tsx","store/DragnDrop/index.tsx","Pages/DragnDropPage/index.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["DragnDropUtils","ref","refPhantom","isTouchMove","lastTouchMoveEvent","onDragStartCb","onDragEndCb","destroyCb","this","cb","e","dataTransfer","setDragImage","current","element","rect","getBoundingClientRect","style","left","top","display","width","height","clientX","clientY","x","y","preventDefault","touches","pageX","offsetWidth","pageY","movePhantomItemWithTouch","touchmove","handleEventTouchMove","touchend","hidePhantomItem","coords","targetTouches","getTargetCoordsFromTouchEvent","dragstart","handleDragStart","dragend","handleDragEnd","addEventListener","removeEventListener","StyledDragItem","styled","div","type","draggable","StyledDragItemText","StyledDragItemMultiplier","StyledPhantomDragItem","PhantomDragItem","React","forwardRef","text","DragItem","onDragStart","onDragEnd","multiplier","name","useRef","useEffect","classIntance","addEventListeners","destroy","StyledDragnDropContainer","isHighlight","StyledDragnDropContainerContent","DragnDropContainer","id","children","data-type","data-id","isNodeTypeDragnDropContainer","node","hasAttribute","getAttribute","dragnDropStore","draggableFromContainerItemInfo","items","color","containerId","containers","allowedToMoveIn","itemsInContainer","computedFn","filter","item","makeAutoObservable","itemName","targetId","document","elementFromPoint","i","Number","parentElement","findContainerIdFromCoords","isAllowedMove","includes","targetItem","find","fromItem","push","autorun","findedContainer","allowedIds","forEach","container","runInAction","length","map","isDraggable","StyledDragnDropPage","observer","clearDraggableFromContainerId","setDraggableFromContainerId","StyledApp","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"4OA+IeA,E,WAxHb,WACEC,EACAC,GACC,yBAZKD,SAYN,OAXMC,gBAWN,OATMC,aAAuB,EAS7B,KARMC,mBAAwC,KAQ9C,KAPMC,cAA0B,aAOhC,KANMC,YAAwB,aAM9B,KALMC,UAAsB,aAM5BC,KAAKP,IAAMA,EACXO,KAAKN,WAAaA,E,wDAGRO,GACVD,KAAKH,cAAgBI,I,gCAGbA,GACRD,KAAKF,YAAcG,I,sCAGLC,GAAe,IAAD,MAC5B,IAEK,OAADA,QAAC,IAADA,GAAA,UAAAA,EAAGC,oBAAH,eAAiBC,gBAAjB,UACAJ,KAAKP,WADL,aACA,EAAUY,WADV,UAEAL,KAAKN,kBAFL,aAEA,EAAiBW,SAJrB,CASAL,KAAKH,gBAEL,IAAMS,EAAUN,KAAKN,WAAWW,QAE1BE,EAAOP,KAAKP,IAAIY,QAAQG,wBAE9BR,KAAKN,WAAWW,QAAQI,MAAMC,KAAO,WACrCV,KAAKN,WAAWW,QAAQI,MAAME,IAAM,WACpCX,KAAKN,WAAWW,QAAQI,MAAMG,QAAU,QAExCV,EAAEC,aAAaC,aAAaE,EAASC,EAAKM,MAAQ,EAAGN,EAAKO,OAAS,M,oCAGvDZ,GACZF,KAAKF,YAAYI,EAAEa,QAASb,EAAEc,W,+CAGPC,EAAWC,GAAY,IAAD,GACzC,UAAClB,KAAKN,kBAAN,aAAC,EAAiBW,WAItBL,KAAKN,WAAWW,QAAQI,MAAMC,KAAOO,EAAI,KACzCjB,KAAKN,WAAWW,QAAQI,MAAME,IAAMO,EAAI,KACxClB,KAAKN,WAAWW,QAAQI,MAAMG,QAAU,W,wCAGvB,IAAD,GACZ,UAACZ,KAAKN,kBAAN,aAAC,EAAiBW,WAItBL,KAAKN,WAAWW,QAAQI,MAAMG,QAAU,U,2CAGrBV,GAAgB,IAAD,EASlC,GARAA,EAAEiB,iBACFnB,KAAKJ,mBAAqBM,EACrBF,KAAKL,cAERK,KAAKL,aAAc,EACnBK,KAAKH,iBAGH,UAACG,KAAKP,WAAN,aAAC,EAAUY,QAAf,CAIA,IAAMY,EAAIf,EAAEkB,QAAQ,GAAGC,MAAQrB,KAAKP,IAAIY,QAAQiB,YAAc,EACxDJ,EAAIhB,EAAEkB,QAAQ,GAAGG,MAAQvB,KAAKP,IAAIY,QAAQiB,YAAc,EAC9DtB,KAAKwB,yBAAyBP,EAAGC,M,0CAGd,IAAD,iBACZO,EAAY,SAACvB,GACjB,EAAKwB,qBAAqBxB,IAEtByB,EAAW,WACf,EAAKhC,aAAc,EACnB,EAAKiC,kBAEL,IAAMC,EA5G0B,SAAC3B,GACrC,IAAM2B,EAAS,CAAEZ,EAAG,EAAGC,EAAG,GAO1B,OALIhB,IACF2B,EAAOZ,EAAIf,EAAE4B,cAAc,GAAGf,QAC9Bc,EAAOX,EAAIhB,EAAE4B,cAAc,GAAGd,SAGzBa,EAoGYE,CAA8B,EAAKnC,oBAClD,EAAKE,YAAY+B,EAAOZ,EAAGY,EAAOX,IAG9Bc,EAAY,SAAC9B,GACjB,EAAK+B,gBAAgB/B,IAEjBgC,EAAU,SAAChC,GACf,EAAKiC,cAAcjC,IAGrB,UAAAF,KAAKP,IAAIY,eAAT,SAAkB+B,iBAAiB,YAAaX,GAChD,UAAAzB,KAAKP,IAAIY,eAAT,SAAkB+B,iBAAiB,WAAYT,GAC/C,UAAA3B,KAAKP,IAAIY,eAAT,SAAkB+B,iBAAiB,cAAeT,GAElD,UAAA3B,KAAKP,IAAIY,eAAT,SAAkB+B,iBAAiB,YAAaJ,GAChD,UAAAhC,KAAKP,IAAIY,eAAT,SAAkB+B,iBAAiB,UAAWF,GAE9ClC,KAAKD,UAAY,WAAO,IAAD,UACrB,YAAKN,IAAIY,eAAT,SAAkBgC,oBAAoB,YAAaZ,GACnD,YAAKhC,IAAIY,eAAT,SAAkBgC,oBAAoB,WAAYV,GAClD,YAAKlC,IAAIY,eAAT,SAAkBgC,oBAAoB,cAAeV,GAErD,YAAKlC,IAAIY,eAAT,SAAkBgC,oBAAoB,YAAaL,GACnD,YAAKvC,IAAIY,eAAT,SAAkBgC,oBAAoB,UAAWH,M,gCAKnDlC,KAAKD,gB,oqBChIT,IAAMuC,EAAiBC,IAAOC,IAAV,KAEE,qBAAGC,QAQX,qBAAGC,WAAkD,UAG7DC,EAAqBJ,IAAOC,IAAV,KAKlBI,EAA2BL,YAAOI,EAAPJ,CAAH,KAsBxBM,EAAwBN,YAAOD,EAAPC,CAAH,KAKrBO,EAAkBC,IAAMC,YAC5B,WAAiBvD,GAAS,IAAvBgD,EAAsB,EAAtBA,KAAMQ,EAAgB,EAAhBA,KACP,OACE,cAACJ,EAAD,CAAuBpD,IAAKA,EAAKgD,KAAMA,EAAvC,SACE,eAACE,EAAD,WAAqBM,EAArB,YAwCOC,MAlCf,YAOmB,IANjBC,EAMgB,EANhBA,YACAC,EAKgB,EALhBA,UACAC,EAIgB,EAJhBA,WACAJ,EAGgB,EAHhBA,KACAK,EAEgB,EAFhBA,KACAb,EACgB,EADhBA,KAEMhD,EAAM8D,iBAAuB,MAC7B7D,EAAa6D,iBAAuB,MAc1C,OAZAC,qBAAU,WACR,IAAMC,EAAe,IAAIjE,EAAeC,EAAKC,GAQ7C,OANI2D,IACFI,EAAaC,oBACbD,EAAaN,aAAY,kBAAMA,EAAYG,MAC3CG,EAAaL,WAAU,SAACnC,EAAWC,GAAZ,OAA0BkC,EAAUnC,EAAGC,OAGzD,kBAAMuC,EAAaE,aACzB,CAACN,EAAYC,IAGd,qCACE,cAACR,EAAD,CAAiBrD,IAAKC,EAAYuD,KAAMA,EAAMR,KAAMA,IACpD,eAACH,EAAD,CAAgBI,YAAaW,EAAY5D,IAAKA,EAAKgD,KAAMA,EAAzD,UACE,eAACG,EAAD,eAA4BS,KAC5B,cAACV,EAAD,UAAqBM,W,8VCvF7B,IAAMW,EAA2BrB,IAAOC,IAAV,KAKR,qBAAGqB,YACP,cAAgB,UAG5BC,EAAkCvB,IAAOC,IAAV,KA+BtBuB,MAlBf,YAI6B,IAH3BC,EAG0B,EAH1BA,GACAC,EAE0B,EAF1BA,SACAJ,EAC0B,EAD1BA,YAEA,OACE,cAACD,EAAD,CACEM,YAAU,wBACVC,UAASH,EACTH,YAAaA,EAHf,SAKE,cAACC,EAAD,UACGG,O,+BCnCHG,EAA+B,SACnCC,GADmC,OAG/B,OAAJA,QAAI,IAAJA,OAAA,EAAAA,EAAMC,aAAa,eACgB,0BAAnCD,EAAKE,aAAa,c,IAkKPC,EAAiB,I,WAhE5B,aAAe,IAAD,gCAvDdC,+BAA2D,KAuD7C,KArDdC,MAAgB,CACd,CACEpB,KAAM,QACND,WAAY,EACZsB,MAAO,OACPC,YAAa,GAGf,CACEtB,KAAM,QACND,WAAY,EACZsB,MAAO,OACPC,YAAa,GAGf,CACEtB,KAAM,QACND,WAAY,EACZsB,MAAO,QACPC,YAAa,GAGf,CACEtB,KAAM,QACND,WAAY,EACZsB,MAAO,QACPC,YAAa,IA2BH,KAvBdC,WAA0B,CACxB,CACEb,GAAI,EACJH,aAAa,EACbiB,gBAAiB,CAAC,IAEpB,CACEd,GAAI,EACJH,aAAa,EACbiB,gBAAiB,CAAC,IAEpB,CACEd,GAAI,EACJH,aAAa,EACbiB,gBAAiB,CAAC,IAEpB,CACEd,GAAI,EACJH,aAAa,EACbiB,gBAAiB,CAAC,KAIR,KA2DdC,iBAAmBC,aAAW,SAACJ,GAC7B,OAAO,EAAKF,MAAMO,QAAO,SAACC,GAAD,OAAUA,EAAKN,cAAgBA,QA3DxDO,YAAmBnF,M,wEAInB4E,EACAQ,EACAN,GAEA9E,KAAKyE,+BAAiC,CACpCG,cACAQ,WACAN,qB,oDAI0B7D,EAAWC,GAAY,IAAD,WAC5CmE,EAjHV,SAAmCpE,EAAWC,GAC5C,IAAImD,EAAiD,KAErD,KADAA,EAAOiB,SAASC,iBAAiBtE,EAAGC,IAElC,OAAO,KAGT,IAAK,IAAIsE,EAAI,EAAGA,EAAI,IAAKA,EAAG,CAAC,IAAD,EAC1B,GAAInB,GAAQD,EAA6BC,GAAO,CAC9C,IAAML,EAAKK,EAAKE,aAAa,WAC7B,GAAIP,EACF,OAAOyB,OAAOzB,GAGlBK,EAAI,UAAGA,SAAH,aAAG,EAAMqB,cAGf,OAAO,KAgGYC,CAA0B1E,EAAGC,GAExC0E,EACJP,IAAQ,UACRrF,KAAKyE,sCADG,aACR,EAAqCK,gBAAgBe,SAASR,KACtB,OAAxCrF,KAAKyE,gCACLY,IAAarF,KAAKyE,+BAA+BG,cAHjD,UAIA5E,KAAKyE,sCAJL,aAIA,EAAqCW,UAEvC,GAAIC,GAAYO,EAAe,CAC7B,IAAME,EAAa9F,KAAK0E,MAAMqB,MAC5B,gBAAGnB,EAAH,EAAGA,YAAatB,EAAhB,EAAgBA,KAAhB,OACE,EAAKmB,gCACLnB,IAAS,EAAKmB,+BAA+BW,UAC7CR,IAAgBS,KAGdW,EAAWhG,KAAK0E,MAAMqB,MAC1B,gBAAGnB,EAAH,EAAGA,YAAatB,EAAhB,EAAgBA,KAAhB,OACE,EAAKmB,gCACLnB,IAAS,EAAKmB,+BAA+BW,UAC7CR,IAAgB,EAAKH,+BAA+BG,eAGpDoB,GAAYA,EAAS3C,aACvB2C,EAAS3C,YAAc,EAEnByC,EACFA,EAAWzC,YAAc,EAEzBrD,KAAK0E,MAAMuB,KAAX,2BACKD,GADL,IAEE3C,WAAY,EACZuB,YAAaS,MAMrBrF,KAAKyE,+BAAiC,S,MAU1CyB,aAAQ,WACN,GAAsD,OAAlD1B,EAAeC,+BAAyC,CAC1D,IAAM0B,EAAkB3B,EAAeK,WAAWkB,MAChD,2BAAG/B,MACC,UAAKQ,EAAeC,sCAApB,aAAK,EAA+CG,gBAGtDwB,EAAuB,GAEvBD,IACFC,EAAU,YAAOD,EAAgBrB,kBAGnCN,EAAeK,WAAWwB,SAAQ,SAACC,GAAD,OAChCC,aAAY,WACV,IAAI1C,GAAc,EACduC,EAAWI,QAAUJ,EAAWP,SAASS,EAAUtC,MACrDH,GAAc,EACVW,EAAeK,WAAWyB,EAAUtC,MACtCQ,EAAeK,WAAWyB,EAAUtC,IAAIH,aAAc,IAG1D,IAAMsC,EAAkB3B,EAAeK,WAAWkB,MAChD,qBAAG/B,KAAgBsC,EAAUtC,MAE3BmC,IACFA,EAAgBtC,YAAcA,cAKpCW,EAAeK,WAAWwB,SAAQ,SAACC,GAAD,OAChCC,aAAY,kBAAOD,EAAUzC,aAAc,WAKjDqC,aAAQ,WACN1B,EAAeE,MAAM+B,KAAI,SAACvB,GAAD,OACvBqB,aAAY,WACNrB,EAAK7B,YAAc,EACrB6B,EAAKwB,aAAc,EAEnBxB,EAAKwB,aAAc,WAMZlC,Q,6ECxNf,IAAMmC,EAAsBpE,IAAOC,IAAV,KAoCVoE,mBAlCf,WACE,OACE,cAACD,EAAD,UACGnC,EAAeK,WAAW4B,KAAI,SAACH,GAAD,OAC7B,cAAC,EAAD,CACEtC,GAAIsC,EAAUtC,GACdH,cAAeyC,EAAUzC,YAF3B,SAKGW,EAAeO,iBAAiBuB,EAAUtC,IAAIyC,KAAI,SAACvB,GAAD,OACjD,cAAC,EAAD,CAEE5B,KAAM4B,EAAK5B,KACXF,UAAW,SAACnC,EAAGC,GACbsD,EAAeqC,8BAA8B5F,EAAGC,IAElDiC,YAAa,SAACG,GACZkB,EAAesC,4BACbR,EAAUtC,GACVV,EACAgD,EAAUxB,kBAGdzB,WAAY6B,EAAK7B,WACjBZ,KAAMyC,EAAKP,MACX1B,KAAMiC,EAAK5B,MAfb,UACU4B,EAAK5B,KADf,YACuB4B,EAAKN,kBAJzB0B,EAAUtC,Y,8JCZzB,IAAM+C,EAAYxE,IAAOC,IAAV,KAeAwE,MARf,WACE,OACE,cAACD,EAAD,UACE,cAAC,EAAD,OCASE,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFtC,SAASuC,eAAe,SAM1BZ,M","file":"static/js/main.b9170e40.chunk.js","sourcesContent":["import React from \"react\";\n\nconst getTargetCoordsFromTouchEvent = (e: TouchEvent | null) => {\n  const coords = { x: 0, y: 0 };\n\n  if (e) {\n    coords.x = e.targetTouches[0].clientX;\n    coords.y = e.targetTouches[0].clientY;\n  }\n\n  return coords;\n};\n\nclass DragnDropUtils {\n  private ref: React.RefObject<HTMLDivElement>;\n  private refPhantom: React.RefObject<HTMLDivElement>;\n\n  private isTouchMove: boolean = false;\n  private lastTouchMoveEvent: TouchEvent | null = null;\n  private onDragStartCb: Function = () => {};\n  private onDragEndCb: Function = () => {};\n  private destroyCb: Function = () => {};\n\n  constructor(\n    ref: React.RefObject<HTMLDivElement>,\n    refPhantom: React.RefObject<HTMLDivElement>\n  ) {\n    this.ref = ref;\n    this.refPhantom = refPhantom;\n  }\n\n  onDragStart(cb: Function) {\n    this.onDragStartCb = cb;\n  }\n\n  onDragEnd(cb: (x: number, y: number) => void) {\n    this.onDragEndCb = cb;\n  }\n\n  handleDragStart(e: DragEvent) {\n    if (\n      !(\n        e?.dataTransfer?.setDragImage &&\n        this.ref?.current &&\n        this.refPhantom?.current\n      )\n    ) {\n      return;\n    }\n    this.onDragStartCb();\n\n    const element = this.refPhantom.current;\n\n    const rect = this.ref.current.getBoundingClientRect();\n\n    this.refPhantom.current.style.left = \"-10000px\";\n    this.refPhantom.current.style.top = \"-10000px\";\n    this.refPhantom.current.style.display = \"block\";\n\n    e.dataTransfer.setDragImage(element, rect.width / 2, rect.height / 2);\n  }\n\n  handleDragEnd(e: DragEvent) {\n    this.onDragEndCb(e.clientX, e.clientY);\n  }\n\n  movePhantomItemWithTouch(x: number, y: number) {\n    if (!this.refPhantom?.current) {\n      return;\n    }\n\n    this.refPhantom.current.style.left = x + \"px\";\n    this.refPhantom.current.style.top = y + \"px\";\n    this.refPhantom.current.style.display = \"block\";\n  }\n\n  hidePhantomItem() {\n    if (!this.refPhantom?.current) {\n      return;\n    }\n\n    this.refPhantom.current.style.display = \"none\";\n  }\n\n  handleEventTouchMove(e: TouchEvent) {\n    e.preventDefault();\n    this.lastTouchMoveEvent = e;\n    if (!this.isTouchMove) {\n      // it will be executed once at the beginning of the movement\n      this.isTouchMove = true;\n      this.onDragStartCb();\n    }\n\n    if (!this.ref?.current) {\n      return;\n    }\n\n    const x = e.touches[0].pageX - this.ref.current.offsetWidth / 2;\n    const y = e.touches[0].pageY - this.ref.current.offsetWidth / 2;\n    this.movePhantomItemWithTouch(x, y);\n  }\n\n  addEventListeners() {\n    const touchmove = (e: TouchEvent) => {\n      this.handleEventTouchMove(e);\n    };\n    const touchend = () => {\n      this.isTouchMove = false;\n      this.hidePhantomItem();\n\n      const coords = getTargetCoordsFromTouchEvent(this.lastTouchMoveEvent);\n      this.onDragEndCb(coords.x, coords.y);\n    };\n\n    const dragstart = (e: DragEvent) => {\n      this.handleDragStart(e);\n    };\n    const dragend = (e: DragEvent) => {\n      this.handleDragEnd(e);\n    };\n\n    this.ref.current?.addEventListener(\"touchmove\", touchmove);\n    this.ref.current?.addEventListener(\"touchend\", touchend);\n    this.ref.current?.addEventListener(\"touchcancel\", touchend);\n\n    this.ref.current?.addEventListener(\"dragstart\", dragstart);\n    this.ref.current?.addEventListener(\"dragend\", dragend);\n\n    this.destroyCb = () => {\n      this.ref.current?.removeEventListener(\"touchmove\", touchmove);\n      this.ref.current?.removeEventListener(\"touchend\", touchend);\n      this.ref.current?.removeEventListener(\"touchcancel\", touchend);\n\n      this.ref.current?.removeEventListener(\"dragstart\", dragstart);\n      this.ref.current?.removeEventListener(\"dragend\", dragend);\n    };\n  }\n\n  destroy() {\n    this.destroyCb();\n  }\n}\n\nexport default DragnDropUtils;\n","import React, { useEffect, useRef } from \"react\";\n\nimport { DragItemColor } from \"../../../store/DragnDrop\";\nimport DragnDropUtils from \"./dragnDropUtils\";\nimport styled from \"styled-components\";\n\ninterface StyledDragItemProps {\n  type: DragItemColor;\n  draggable?: boolean;\n}\n\nconst StyledDragItem = styled.div`\n  position: relative;\n  background-color: ${({ type }: StyledDragItemProps) => type};\n  width: 120px;\n  height: 120px;\n  border-radius: 70px;\n  line-height: 120px;\n  text-align: center;\n\n  :hover {\n    cursor: ${({ draggable }: StyledDragItemProps) => draggable && \"grab\"};\n  }\n`;\nconst StyledDragItemText = styled.div`\n  pointer-events: none;\n  user-select: none;\n`;\n\nconst StyledDragItemMultiplier = styled(StyledDragItemText)`\n  color: red;\n  position: absolute;\n  right: 0;\n  top: 0;\n  line-height: 20px;\n`;\n\ninterface DragItemProps {\n  name: string;\n  multiplier: number;\n  type: DragItemColor;\n  text: string;\n  onDragStart: (name: string) => void;\n  onDragEnd: (x: number, y: number) => void;\n}\n\ninterface PhantomDragItemProps {\n  type: DragItemColor;\n  text: string;\n}\n\nconst StyledPhantomDragItem = styled(StyledDragItem)`\n  position: absolute;\n  display: none;\n  z-index: 999;\n`;\nconst PhantomDragItem = React.forwardRef<HTMLDivElement, PhantomDragItemProps>(\n  ({ type, text }, ref) => {\n    return (\n      <StyledPhantomDragItem ref={ref} type={type}>\n        <StyledDragItemText>{text}_</StyledDragItemText>\n      </StyledPhantomDragItem>\n    );\n  }\n);\n\nfunction DragItem({\n  onDragStart,\n  onDragEnd,\n  multiplier,\n  text,\n  name,\n  type,\n}: DragItemProps) {\n  const ref = useRef<HTMLDivElement>(null);\n  const refPhantom = useRef<HTMLDivElement>(null);\n\n  useEffect(() => {\n    const classIntance = new DragnDropUtils(ref, refPhantom);\n\n    if (multiplier) {\n      classIntance.addEventListeners();\n      classIntance.onDragStart(() => onDragStart(name));\n      classIntance.onDragEnd((x: number, y: number) => onDragEnd(x, y));\n    }\n\n    return () => classIntance.destroy();\n  }, [multiplier, name]);\n\n  return (\n    <>\n      <PhantomDragItem ref={refPhantom} text={text} type={type} />\n      <StyledDragItem draggable={!!multiplier} ref={ref} type={type}>\n        <StyledDragItemMultiplier>x{multiplier}</StyledDragItemMultiplier>\n        <StyledDragItemText>{text}</StyledDragItemText>\n      </StyledDragItem>\n    </>\n  );\n}\n\nexport default DragItem;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\ninterface StyledDragnDropContainerProps {\n  isHighlight: boolean;\n}\n\nconst StyledDragnDropContainer = styled.div`\n  border: 2px solid #000;\n  width: 400px;\n  height: 160px;\n  margin-bottom: 20px;\n  background-color: ${({ isHighlight }: StyledDragnDropContainerProps) =>\n    isHighlight ? \"transparent\" : \"#ccc\"};\n`;\n\nconst StyledDragnDropContainerContent = styled.div`\n  height: 160px;\n\n  display: flex;\n  align-items: center;\n  justify-content: space-evenly;\n`;\n\ninterface DragnDropContainerProps {\n  id: number;\n  children?: React.ReactNode;\n  isHighlight: boolean;\n}\nfunction DragnDropContainer({\n  id,\n  children,\n  isHighlight,\n}: DragnDropContainerProps) {\n  return (\n    <StyledDragnDropContainer\n      data-type=\"Drag'n'Drop_container\"\n      data-id={id}\n      isHighlight={isHighlight}\n    >\n      <StyledDragnDropContainerContent>\n        {children}\n      </StyledDragnDropContainerContent>\n    </StyledDragnDropContainer>\n  );\n}\n\nexport default DragnDropContainer;\n","import { autorun, makeAutoObservable, runInAction } from \"mobx\";\n\nimport { computedFn } from \"mobx-utils\";\n\nexport type DragItemColor = \"blue\" | \"green\";\n\nconst isNodeTypeDragnDropContainer = (\n  node: Element | HTMLElement | null | undefined\n) =>\n  node?.hasAttribute(\"data-type\") &&\n  node.getAttribute(\"data-type\") === \"Drag'n'Drop_container\";\n\nfunction findContainerIdFromCoords(x: number, y: number): number | null {\n  let node: Element | undefined | null | HTMLElement = null;\n  node = document.elementFromPoint(x, y);\n  if (!node) {\n    return null;\n  }\n\n  for (let i = 0; i < 5; ++i) {\n    if (node && isNodeTypeDragnDropContainer(node)) {\n      const id = node.getAttribute(\"data-id\");\n      if (id) {\n        return Number(id);\n      }\n    }\n    node = node?.parentElement;\n  }\n\n  return null;\n}\n\ninterface Item {\n  multiplier: number;\n  name: string;\n  color: DragItemColor;\n  isDraggable?: boolean;\n  containerId: number;\n}\n\ninterface Container {\n  id: number;\n  allowedToMoveIn: number[];\n  isHighlight?: boolean;\n}\n\ninterface DraggableItemInfo {\n  containerId: number;\n  itemName: string;\n  allowedToMoveIn: number[];\n}\n\nclass DragnDrop {\n  draggableFromContainerItemInfo: DraggableItemInfo | null = null;\n\n  items: Item[] = [\n    {\n      name: \"elem1\",\n      multiplier: 5,\n      color: \"blue\",\n      containerId: 1,\n    },\n\n    {\n      name: \"elem2\",\n      multiplier: 5,\n      color: \"blue\",\n      containerId: 1,\n    },\n\n    {\n      name: \"elem1\",\n      multiplier: 5,\n      color: \"green\",\n      containerId: 4,\n    },\n\n    {\n      name: \"elem2\",\n      multiplier: 5,\n      color: \"green\",\n      containerId: 4,\n    },\n  ];\n\n  containers: Container[] = [\n    {\n      id: 1,\n      isHighlight: true,\n      allowedToMoveIn: [2],\n    },\n    {\n      id: 2,\n      isHighlight: true,\n      allowedToMoveIn: [1],\n    },\n    {\n      id: 3,\n      isHighlight: true,\n      allowedToMoveIn: [4],\n    },\n    {\n      id: 4,\n      isHighlight: true,\n      allowedToMoveIn: [3],\n    },\n  ];\n\n  constructor() {\n    makeAutoObservable(this);\n  }\n\n  setDraggableFromContainerId(\n    containerId: number,\n    itemName: string,\n    allowedToMoveIn: number[]\n  ) {\n    this.draggableFromContainerItemInfo = {\n      containerId,\n      itemName,\n      allowedToMoveIn,\n    };\n  }\n\n  clearDraggableFromContainerId(x: number, y: number) {\n    const targetId = findContainerIdFromCoords(x, y);\n\n    const isAllowedMove =\n      targetId &&\n      this.draggableFromContainerItemInfo?.allowedToMoveIn.includes(targetId) &&\n      this.draggableFromContainerItemInfo !== null &&\n      targetId !== this.draggableFromContainerItemInfo.containerId &&\n      this.draggableFromContainerItemInfo?.itemName;\n\n    if (targetId && isAllowedMove) {\n      const targetItem = this.items.find(\n        ({ containerId, name }) =>\n          this.draggableFromContainerItemInfo &&\n          name === this.draggableFromContainerItemInfo.itemName &&\n          containerId === targetId\n      );\n\n      const fromItem = this.items.find(\n        ({ containerId, name }) =>\n          this.draggableFromContainerItemInfo &&\n          name === this.draggableFromContainerItemInfo.itemName &&\n          containerId === this.draggableFromContainerItemInfo.containerId\n      );\n\n      if (fromItem && fromItem.multiplier) {\n        fromItem.multiplier -= 1;\n\n        if (targetItem) {\n          targetItem.multiplier += 1;\n        } else {\n          this.items.push({\n            ...fromItem,\n            multiplier: 1,\n            containerId: targetId,\n          });\n        }\n      }\n    }\n\n    this.draggableFromContainerItemInfo = null;\n  }\n\n  itemsInContainer = computedFn((containerId) => {\n    return this.items.filter((item) => item.containerId === containerId);\n  });\n}\n\nexport const dragnDropStore = new DragnDrop();\n\nautorun(() => {\n  if (dragnDropStore.draggableFromContainerItemInfo !== null) {\n    const findedContainer = dragnDropStore.containers.find(\n      ({ id }) =>\n        id === dragnDropStore.draggableFromContainerItemInfo?.containerId\n    );\n\n    let allowedIds: number[] = [];\n\n    if (findedContainer) {\n      allowedIds = [...findedContainer.allowedToMoveIn];\n    }\n\n    dragnDropStore.containers.forEach((container) =>\n      runInAction(() => {\n        let isHighlight = false;\n        if (allowedIds.length && allowedIds.includes(container.id)) {\n          isHighlight = true;\n          if (dragnDropStore.containers[container.id]) {\n            dragnDropStore.containers[container.id].isHighlight = true;\n          }\n        }\n        const findedContainer = dragnDropStore.containers.find(\n          ({ id }) => id === container.id\n        );\n        if (findedContainer) {\n          findedContainer.isHighlight = isHighlight;\n        }\n      })\n    );\n  } else {\n    dragnDropStore.containers.forEach((container) =>\n      runInAction(() => (container.isHighlight = true))\n    );\n  }\n});\n\nautorun(() => {\n  dragnDropStore.items.map((item) =>\n    runInAction(() => {\n      if (item.multiplier <= 0) {\n        item.isDraggable = false;\n      } else {\n        item.isDraggable = true;\n      }\n    })\n  );\n});\n\nexport default dragnDropStore;\n","import DragItem from \"../../Components/DragnDropGroup/DragItem\";\nimport DragnDropContainer from \"../../Components/DragnDropGroup/DragnDropContainer\";\nimport React from \"react\";\nimport dragnDropStore from \"../../store/DragnDrop\";\nimport { observer } from \"mobx-react\";\nimport styled from \"styled-components\";\n\nconst StyledDragnDropPage = styled.div``;\n\nfunction DragnDropPage() {\n  return (\n    <StyledDragnDropPage>\n      {dragnDropStore.containers.map((container) => (\n        <DragnDropContainer\n          id={container.id}\n          isHighlight={!!container.isHighlight}\n          key={container.id}\n        >\n          {dragnDropStore.itemsInContainer(container.id).map((item) => (\n            <DragItem\n              key={`${item.name}_${item.containerId}`}\n              name={item.name}\n              onDragEnd={(x, y) => {\n                dragnDropStore.clearDraggableFromContainerId(x, y);\n              }}\n              onDragStart={(name) => {\n                dragnDropStore.setDraggableFromContainerId(\n                  container.id,\n                  name,\n                  container.allowedToMoveIn\n                );\n              }}\n              multiplier={item.multiplier}\n              type={item.color}\n              text={item.name}\n            />\n          ))}\n        </DragnDropContainer>\n      ))}\n    </StyledDragnDropPage>\n  );\n}\n\nexport default observer(DragnDropPage);\n","import DragnDropPage from \"./Pages/DragnDropPage\";\nimport React from \"react\";\nimport styled from \"styled-components\";\n\nconst StyledApp = styled.div`\n  height: 100vh;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nfunction App() {\n  return (\n    <StyledApp>\n      <DragnDropPage />\n    </StyledApp>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from \"web-vitals\";\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}